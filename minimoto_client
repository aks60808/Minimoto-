#!/usr/bin/env python3
import os
import json
import sys
import os.path
from os import path

def upload_image(input_bucket):
    upload = "aws s3 cp ./sample_images s3://"+input_bucket+"/ --recursive"
    os.system(upload)
    print("upload images done")

def send_request():
    set_attribute = "aws sqs set-queue-attributes --queue-url https://sqs.us-east-1.amazonaws.com/112279482413/unsw-9243-group22-minimoto-sqs.fifo --attributes ContentBasedDeduplication=true"
    os.system(set_attribute)
    send = "aws sqs send-message --queue-url https://sqs.us-east-1.amazonaws.com/112279482413/unsw-9243-group22-minimoto-sqs.fifo  --message-body \"Hello from Angelina.\" --message-group-id \"transcode_message_queue\" >/dev/null"
    os.system(send)

def instance_configure():

    os.system("sudo apt install unzip")
    os.system("curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" > /dev/null")
    os.system("unzip awscliv2.zip >/dev/null")
    os.system("sudo ./aws/install > /dev/null")

    credential = open("./credentials")
    Lines = credential.readlines()
    if not path.exists("~/.aws"):
        os.system("mkdir ~/.aws")

    os.system("mv ./credentials ~/.aws/credentials")
    os.system("echo \"[default]\noutput = json\nregion = us-east-1\" > ~/.aws/config")


def main():
    length = len(sys.argv)
    wait_flag = False
    input_bucket = ""
    output_bucket = ""
    if length == 4 and sys.argv[1] == "[--wait]":
        wait_flag = True
        input_bucket = sys.argv[2]
        output_bucket = sys.argv[3]
    elif length == 3:
        input_bucket = sys.argv[1]
        output_bucket = sys.argv[2]
    else:
        sys.exit("Usage:./minimoto_client [--wait] input_bucket_path output_bucket_path")
        
    instance_configure()
    upload_image(input_bucket)

if __name__ == "__main__":
    main()

